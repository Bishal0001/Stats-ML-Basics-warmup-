'''
Q.
Problem Description:

Given an array consisting of various numbers, representing a distribution, check if the array follows a normal distribution. For the task, you aren't allowed to use any libraries, but rather try to solve the same using mean and standard deviation (hint: which method uses these parameters?).

Take the margin of error for the test to be a 2% difference from the required values under standard deviations. What this means in simpler terms is, find what percent of data lies in one/two/three standard deviation.
If the percentage observed is similar to the properties of the normal distribution with a margin of +- 2% then return "yes" the data is normal, else "no".

Input Format:

The input consists of just an array passed to the function.
Output Format:

Return "yes" or "no" based on checking whether the array is normally distributed or not.  
Input Constraints:

2000 <= Length of array <= 50000 
 -3 <= a <= 3, where a is any element of the array 
Sample Input:

0.44122748688504143 -0.33087015189408764 2.43077118700778 -0.2520921296030769 0.10960984157818278 1.5824811170615634 -0.9092324048562419 -0.5916366579302884 0.18760322583703548 -0.32986995777935924 
Sample Output:

 no 
Output Explanation:

 One can check the distribution and see that the given input array is not distributed normally 
Code Constraints:

The code for taking the input is already taken care of. You have to just complete the function "normality_test()"
which takes as input the distribution and returns "yes" or "no" as per the question's requirements.
Note: You aren't allowed to use scipy, stats, or any other libraries with inbuilt normality checking functions. But feel free to use NumPy to compute the helper functions.
'''





'''
SOL Approach : The empirical rule, also referred to as the three-sigma rule or 68-95-99.7 rule, is a statistical rule which states that for
a normal distribution, almost all observed data will fall within three standard deviations (denoted by σ) of the mean or average (denoted by µ).
'''


'''
SOL : 1
'''

import numpy as np
# from numpy import mean
# from numpy import std
def normality_test(arr):
    '''
    Input: 
    arr: a python list denoting the input distribution of floating point values
    Output:
    res: return "yes" or "no" as per required, of type string
    '''
    res = ""
    # Your code goes here
    l = len(arr)
    num1 = 0
    num2 = 0
    num3 = 0
    
    m = np.mean(arr)
    s = np.std(arr)
    # m = sum(arr)/l
    # s = (sum((x - m) ** 2 for x in arr) / l) ** .5
    

    for i in arr:
        if (i < s + m) and (i > m - s):
            num1 += 1
        if  ( i <(2 * s) + m) and  (i > (m - (2 * s))):
            num2 += 1
        if ( i <(3 * s) + m) and (i > (m - (3 * s))):
            num3 += 1
    
    p1 = num1 / l
    p2 = num2 / l 
    p3 = num3 / l 

    if (abs(p1 - 0.68 ) <= 0.02) and (abs(p2 - 0.97) <= 0.02) and (abs(p3 - 0.99 ) <=0.02):
        res = 'yes'
    else:
        res = 'no'
    return res

